on:
  push:
    branches:
      - main
      - development
    tags:
      - '**'

jobs:
  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    permissions:
      contents: write
      checks: write
      actions: read
      issues: read
      packages: write
      pull-requests: read
      repository-projects: read
      statuses: read
    steps:
      - name: Dump job github var
        env:
          GITHUB_VAR: ${{ toJson(github) }}
        run: echo "$GITHUB_VAR"
      - 
        name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - 
        name: "Log in to Docker Hub"
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: "Get hitster version"
        id: version
        run: |
          cd client
          npm i @corteks/gitversion
          echo "HITSTER_VERSION=$(npm run version --silent)" >> $GITHUB_OUTPUT
      - name: Extract branch name
        run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
        id: branch
      - 
        name: Build and push Docker dev image
        if: startsWith(github.ref, 'refs/heads/development')
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: tonironaldbarth/hitster:dev
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            HITSTER_VERSION=${{ steps.version.outputs.HITSTER_VERSION }},HITSTER_BRANCH=${{ steps.branch.outputs.branch }}
      - 
        name: Build and push Docker stable image
        if: startsWith(github.ref, 'refs/tags') && !github.event_type != 'pull_request'
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: tonironaldbarth/hitster:latest , tonironaldbarth/hitster:${{ github.ref_name }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            HITSTER_VERSION=${{ steps.version.outputs.HITSTER_VERSION }},HITSTER_BRANCH=${{ steps.branch.outputs.branch }}
      - name: Update changelog
        uses: thomaseizinger/keep-a-changelog-new-release@1.2.1
        if: startsWith(github.ref, 'refs/tags') && !github.event_type != 'pull_request'
        with:
          version: ${{ steps.version.outputs.HITSTER_VERSION }}
      # In order to make a commit, we need to initialize a user.
      # You may choose to write something less generic here if you want, it doesn't matter functionality wise.
      - name: Initialize mandatory git config
        if: startsWith(github.ref, 'refs/tags') && !github.event_type != 'pull_request'
        run: |
          git config user.name "GitHub actions"
          git config user.email noreply@github.com
      - name: Commit changelog
        if: startsWith(github.ref, 'refs/tags') && !github.event_type != 'pull_request'
        run: |
          git add CHANGELOG.md
          git commit --message "Prepare release ${{ steps.version.outputs.HITSTER_VERSION }}"
          git push
